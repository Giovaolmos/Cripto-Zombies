/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ZombieFactory, ZombieFactoryInterface } from "../ZombieFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "zombieId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
    ],
    name: "NewZombie",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "createRandomZombie",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zombies",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346025576010600055662386f26fc10000600155610500908161002b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80632052465e1461030d57637bff0a011461003257600080fd5b346103085760203660031901126103085760043567ffffffffffffffff811161030857366023820112156103085780600401359067ffffffffffffffff82116102c6576040519161008d601f8201601f191660200184610460565b808352602083019036602482850101116103085760208160009260246100ce96018537850101526100df602060405180938282019586918851928391610482565b81010301601f198101835282610460565b5190206001549081156102f25706906040516040810181811067ffffffffffffffff8211176102c65760405281815260208101838152600254680100000000000000008110156102c65780600161013992016002556103f1565b9290926102dc575180519067ffffffffffffffff82116102c65761015d8454610426565b601f811161027e575b50602090601f831160011461021457600193929160009183610209575b5050600019600383901b1c191690831b1783555b5191015560025460001981019081116101f3577f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7926101e860405193849384526060602085015260608401906104a5565b9060408301520390a1005b634e487b7160e01b600052601160045260246000fd5b015190503880610183565b90601f1983169185600052816000209260005b818110610266575091600195949291838795931061024d575b505050811b018355610197565b015160001960f88460031b161c19169055388080610240565b92936020600181928786015181550195019301610227565b846000526020600020601f840160051c810191602085106102bc575b601f0160051c01905b8181106102b05750610166565b600081556001016102a3565b909150819061029a565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600080fd5b346103085760203660031901126103085760043560025481101561030857610334906103f1565b506040516000825461034581610426565b80845290600181169081156103cd5750600114610390575b5061038692610370836001930384610460565b01546040519283926040845260408401906104a5565b9060208301520390f35b6000848152602081209092505b8183106103b3575050810160200161038661035d565b60018160209294939454838588010152019101919061039d565b60ff191660208581019190915291151560051b84019091019150610386905061035d565b60025481101561041057600260005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610456575b602083101461044057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610435565b90601f8019910116810190811067ffffffffffffffff8211176102c657604052565b60005b8381106104955750506000910152565b8181015183820152602001610485565b906020916104be81518092818552858086019101610482565b601f01601f191601019056fea2646970667358221220872b1de3367935979ab47539bbabfad8ef6af90c8dc31415e17a662d1161f77164736f6c634300081c0033";

type ZombieFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZombieFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZombieFactory__factory extends ContractFactory {
  constructor(...args: ZombieFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ZombieFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZombieFactory__factory {
    return super.connect(runner) as ZombieFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZombieFactoryInterface {
    return new Interface(_abi) as ZombieFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ZombieFactory {
    return new Contract(address, _abi, runner) as unknown as ZombieFactory;
  }
}
